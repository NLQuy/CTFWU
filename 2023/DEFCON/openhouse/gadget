


Gadgets
=======


0x0000125a: adc al, 0x24; ret; 
0x0000119a: adc al, 0x51; call eax; 
0x0000119a: adc al, 0x51; call eax; add esp, 0x10; leave; ret; 
0x000014c2: adc al, 4; add byte ptr [eax], al; pop ebx; pop ebp; ret; 
0x000011a0: adc cl, cl; ret; 
0x00001194: adc edx, dword ptr [ebp - 0x77]; in eax, 0x83; in al, dx; adc al, 0x51; call eax; 
0x00001032: add al, 0; add byte ptr [eax], al; jmp dword ptr [ebx + 8]; 
0x000014c3: add al, 0; add byte ptr [ebx + 0x5d], bl; ret; 
0x00001c48: add al, 0xe8; ret 0xfff4; 
0x0000195b: add al, byte ptr [eax]; add byte ptr [ebx + 0x5d5b34c4], al; ret; 
0x0000178b: add al, byte ptr [eax]; add byte ptr [ebx + 0x5d], bl; ret; 
0x00001028: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; push dword ptr [ebx + 4]; jmp dword ptr [ebx + 8]; 
0x0000103a: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; jmp dword ptr [ebx + 0xc]; 
0x0000102a: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; push dword ptr [ebx + 4]; jmp dword ptr [ebx + 8]; 
0x00001784: add byte ptr [eax], al; add byte ptr [eax], al; add esp, 0x234; pop ebx; pop ebp; ret; 
0x000014bc: add byte ptr [eax], al; add byte ptr [eax], al; add esp, 0x414; pop ebx; pop ebp; ret; 
0x0000103c: add byte ptr [eax], al; add byte ptr [eax], al; jmp dword ptr [ebx + 0xc]; 
0x0000102c: add byte ptr [eax], al; add byte ptr [eax], al; push dword ptr [ebx + 4]; jmp dword ptr [ebx + 8]; 
0x00001269: add byte ptr [eax], al; add byte ptr [ebx - 0x7f], bl; ret; 
0x000013cc: add byte ptr [eax], al; add byte ptr [ebx - 0x7f], bl; ret; 
0x000015dc: add byte ptr [eax], al; add byte ptr [ebx - 0x7f], bl; ret; 
0x000017a9: add byte ptr [eax], al; add byte ptr [ebx - 0x7f], bl; ret; 
0x00001979: add byte ptr [eax], al; add byte ptr [ebx - 0x7f], bl; ret; 
0x00001785: add byte ptr [eax], al; add byte ptr [ecx + 0x234c4], al; add byte ptr [ebx + 0x5d], bl; ret; 
0x000014bd: add byte ptr [eax], al; add byte ptr [ecx + 0x414c4], al; add byte ptr [ebx + 0x5d], bl; ret; 
0x00001242: add byte ptr [eax], al; add byte ptr [ecx], al; mov ebx, dword ptr [ebp - 4]; leave; ret; 
0x0000100b: add byte ptr [eax], al; add ebx, 0x2107; mov eax, dword ptr [ebx - 0x14]; test eax, eax; je 0x101f; call eax; 
0x00001786: add byte ptr [eax], al; add esp, 0x234; pop ebx; pop ebp; ret; 
0x0000195c: add byte ptr [eax], al; add esp, 0x34; pop ebx; pop ebp; ret; 
0x000014be: add byte ptr [eax], al; add esp, 0x414; pop ebx; pop ebp; ret; 
0x00001c69: add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x0000103e: add byte ptr [eax], al; jmp dword ptr [ebx + 0xc]; 
0x00001034: add byte ptr [eax], al; jmp dword ptr [ebx + 8]; 
0x00001011: add byte ptr [eax], al; mov eax, dword ptr [ebx - 0x14]; test eax, eax; je 0x101f; call eax; 
0x00001b5a: add byte ptr [eax], al; mov ecx, dword ptr [ebp - 0x1c]; mov eax, dword ptr [ebp - 0x20]; mov eax, dword ptr [ecx + eax*4 - 0x110c]; add eax, ecx; jmp eax; 
0x000014c4: add byte ptr [eax], al; pop ebx; pop ebp; ret; 
0x0000178c: add byte ptr [eax], al; pop ebx; pop ebp; ret; 
0x0000102e: add byte ptr [eax], al; push dword ptr [ebx + 4]; jmp dword ptr [ebx + 8]; 
0x0000195d: add byte ptr [ebx + 0x5d5b34c4], al; ret; 
0x000014c5: add byte ptr [ebx + 0x5d], bl; ret; 
0x0000178d: add byte ptr [ebx + 0x5d], bl; ret; 
0x0000126b: add byte ptr [ebx - 0x7f], bl; ret; 
0x000013ce: add byte ptr [ebx - 0x7f], bl; ret; 
0x000015de: add byte ptr [ebx - 0x7f], bl; ret; 
0x000017ab: add byte ptr [ebx - 0x7f], bl; ret; 
0x0000197b: add byte ptr [ebx - 0x7f], bl; ret; 
0x00001787: add byte ptr [ecx + 0x234c4], al; add byte ptr [ebx + 0x5d], bl; ret; 
0x000014bf: add byte ptr [ecx + 0x414c4], al; add byte ptr [ebx + 0x5d], bl; ret; 
0x00001244: add byte ptr [ecx], al; mov ebx, dword ptr [ebp - 4]; leave; ret; 
0x00001b69: add eax, ecx; jmp eax; 
0x0000100d: add ebx, 0x2107; mov eax, dword ptr [ebx - 0x14]; test eax, eax; je 0x101f; call eax; 
0x00001237: add esp, 0x10; call 0x1170; mov byte ptr [ebx + 0x4c], 1; mov ebx, dword ptr [ebp - 4]; leave; ret; 
0x0000119e: add esp, 0x10; leave; ret; 
0x000011ef: add esp, 0x10; mov ebx, dword ptr [ebp - 4]; leave; ret; 
0x00001788: add esp, 0x234; pop ebx; pop ebp; ret; 
0x000013b7: add esp, 0x24; pop ebx; pop ebp; ret; 
0x000015bf: add esp, 0x24; pop ebx; pop ebp; ret; 
0x0000195e: add esp, 0x34; pop ebx; pop ebp; ret; 
0x00001c50: add esp, 0x34; pop ebx; pop ebp; ret; 
0x000014c0: add esp, 0x414; pop ebx; pop ebp; ret; 
0x0000101f: add esp, 8; pop ebx; ret; 
0x00001c6b: add esp, 8; pop ebx; ret; 
0x000013b9: and al, 0x5b; pop ebp; ret; 
0x000015c1: and al, 0x5b; pop ebp; ret; 
0x000015b8: and al, 4; call 0x1110; add esp, 0x24; pop ebx; pop ebp; ret; 
0x000013b0: and al, 8; call 0x1100; add esp, 0x24; pop ebx; pop ebp; ret; 
0x00001156: call 0x1040; hlt; mov ebx, dword ptr [esp]; ret; 
0x000013b2: call 0x1100; add esp, 0x24; pop ebx; pop ebp; ret; 
0x000015ba: call 0x1110; add esp, 0x24; pop ebx; pop ebp; ret; 
0x00001c49: call 0x1110; xor eax, eax; add esp, 0x34; pop ebx; pop ebp; ret; 
0x00001008: call 0x1160; add ebx, 0x2107; mov eax, dword ptr [ebx - 0x14]; test eax, eax; je 0x101f; call eax; 
0x0000123a: call 0x1170; mov byte ptr [ebx + 0x4c], 1; mov ebx, dword ptr [ebp - 4]; leave; ret; 
0x0000101d: call eax; 
0x0000119c: call eax; 
0x0000119c: call eax; add esp, 0x10; leave; ret; 
0x0000101d: call eax; add esp, 8; pop ebx; ret; 
0x000011ed: call edx; 
0x000011ed: call edx; add esp, 0x10; mov ebx, dword ptr [ebp - 4]; leave; ret; 
0x000011f4: cld; leave; ret; 
0x00001248: cld; leave; ret; 
0x00001957: dec dword ptr [ecx + 0x25888]; add byte ptr [ebx + 0x5d5b34c4], al; ret; 
0x00001241: dec esp; add byte ptr [eax], al; add byte ptr [ecx], al; mov ebx, dword ptr [ebp - 4]; leave; ret; 
0x0000115b: hlt; mov ebx, dword ptr [esp]; ret; 
0x00001199: in al, dx; adc al, 0x51; call eax; 
0x00001199: in al, dx; adc al, 0x51; call eax; add esp, 0x10; leave; ret; 
0x000011e9: in al, dx; or byte ptr [eax + 0x51], dl; call edx; 
0x00001197: in eax, 0x83; in al, dx; adc al, 0x51; call eax; 
0x000011e3: inc dword ptr [ebp - 0x7cf58b2e]; in al, dx; or byte ptr [eax + 0x51], dl; call edx; 
0x000013b6: inc dword ptr [ebx + 0x5d5b24c4]; ret; 
0x000015be: inc dword ptr [ebx + 0x5d5b24c4]; ret; 
0x00001b56: ja 0x1c03; mov ecx, dword ptr [ebp - 0x1c]; mov eax, dword ptr [ebp - 0x20]; mov eax, dword ptr [ecx + eax*4 - 0x110c]; add eax, ecx; jmp eax; 
0x0000101b: je 0x101f; call eax; 
0x0000101b: je 0x101f; call eax; add esp, 8; pop ebx; ret; 
0x00001193: je 0x11a8; push ebp; mov ebp, esp; sub esp, 0x14; push ecx; call eax; 
0x000011e6: je 0x11f2; sub esp, 8; push eax; push ecx; call edx; 
0x00001040: jmp dword ptr [ebx + 0xc]; 
0x00001036: jmp dword ptr [ebx + 8]; 
0x00001125: jmp dword ptr [esi - 0x70]; 
0x00001b6b: jmp eax; 
0x000011a3: lea esi, [esi]; nop; ret; 
0x000011a1: leave; ret; 
0x000011f5: leave; ret; 
0x00001249: leave; ret; 
0x00001020: les ecx, ptr [eax]; pop ebx; ret; 
0x00001c6c: les ecx, ptr [eax]; pop ebx; ret; 
0x00001238: les edx, ptr [eax]; call 0x1170; mov byte ptr [ebx + 0x4c], 1; mov ebx, dword ptr [ebp - 4]; leave; ret; 
0x0000119f: les edx, ptr [eax]; leave; ret; 
0x000011f0: les edx, ptr [eax]; mov ebx, dword ptr [ebp - 4]; leave; ret; 
0x000014c1: les edx, ptr [esp + eax]; add byte ptr [eax], al; pop ebx; pop ebp; ret; 
0x0000195f: les esi, ptr [ebx + ebx*2]; pop ebp; ret; 
0x00001c51: les esi, ptr [ebx + ebx*2]; pop ebp; ret; 
0x00001789: les esi, ptr [edx + eax]; add byte ptr [eax], al; pop ebx; pop ebp; ret; 
0x000013b8: les esp, ptr [ebx + ebx*2]; pop ebp; ret; 
0x000015c0: les esp, ptr [ebx + ebx*2]; pop ebp; ret; 
0x00001959: mov byte ptr [eax + 2], bl; add byte ptr [eax], al; add esp, 0x34; pop ebx; pop ebp; ret; 
0x0000123f: mov byte ptr [ebx + 0x4c], 1; mov ebx, dword ptr [ebp - 4]; leave; ret; 
0x00001037: mov dword ptr [8], eax; add byte ptr [eax], al; add byte ptr [eax], al; jmp dword ptr [ebx + 0xc]; 
0x00001958: mov dword ptr [eax + 0x258], ecx; add esp, 0x34; pop ebx; pop ebp; ret; 
0x00001b5f: mov eax, dword ptr [ebp - 0x20]; mov eax, dword ptr [ecx + eax*4 - 0x110c]; add eax, ecx; jmp eax; 
0x00001013: mov eax, dword ptr [ebx - 0x14]; test eax, eax; je 0x101f; call eax; 
0x00001b62: mov eax, dword ptr [ecx + eax*4 - 0x110c]; add eax, ecx; jmp eax; 
0x00001196: mov ebp, esp; sub esp, 0x14; push ecx; call eax; 
0x000011f2: mov ebx, dword ptr [ebp - 4]; leave; ret; 
0x00001246: mov ebx, dword ptr [ebp - 4]; leave; ret; 
0x0000115c: mov ebx, dword ptr [esp]; ret; 
0x00001160: mov ebx, dword ptr [esp]; ret; 
0x00001b5c: mov ecx, dword ptr [ebp - 0x1c]; mov eax, dword ptr [ebp - 0x20]; mov eax, dword ptr [ecx + eax*4 - 0x110c]; add eax, ecx; jmp eax; 
0x00001259: mov edx, dword ptr [esp]; ret; 
0x000011a7: nop; ret; 
0x000011e7: or al, byte ptr [ebx + 0x515008ec]; call edx; 
0x000011ea: or byte ptr [eax + 0x51], dl; call edx; 
0x00001038: or byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; jmp dword ptr [ebx + 0xc]; 
0x0000195a: pop eax; add al, byte ptr [eax]; add byte ptr [ebx + 0x5d5b34c4], al; ret; 
0x000011f3: pop ebp; cld; leave; ret; 
0x00001247: pop ebp; cld; leave; ret; 
0x000013bb: pop ebp; ret; 
0x000014c7: pop ebp; ret; 
0x000015c3: pop ebp; ret; 
0x0000178f: pop ebp; ret; 
0x00001962: pop ebp; ret; 
0x00001c54: pop ebp; ret; 
0x000013ba: pop ebx; pop ebp; ret; 
0x000014c6: pop ebx; pop ebp; ret; 
0x000015c2: pop ebx; pop ebp; ret; 
0x0000178e: pop ebx; pop ebp; ret; 
0x00001961: pop ebx; pop ebp; ret; 
0x00001c53: pop ebx; pop ebp; ret; 
0x00001022: pop ebx; ret; 
0x00001c6e: pop ebx; ret; 
0x00001030: push dword ptr [ebx + 4]; jmp dword ptr [ebx + 8]; 
0x00001150: push dword ptr [ebx - 8]; call 0x1040; hlt; mov ebx, dword ptr [esp]; ret; 
0x000011eb: push eax; push ecx; call edx; 
0x00001195: push ebp; mov ebp, esp; sub esp, 0x14; push ecx; call eax; 
0x0000119b: push ecx; call eax; 
0x0000119b: push ecx; call eax; add esp, 0x10; leave; ret; 
0x000011ec: push ecx; call edx; 
0x000011ec: push ecx; call edx; add esp, 0x10; mov ebx, dword ptr [ebp - 4]; leave; ret; 
0x0000114f: push esi; push dword ptr [ebx - 8]; call 0x1040; hlt; mov ebx, dword ptr [esp]; ret; 
0x0000115a: push esp; mov ebx, dword ptr [esp]; ret; 
0x000011b6: ret 0x1f5f; 
0x00001176: ret 0x1f9f; 
0x00001c4a: ret 0xfff4; 
0x0000100e: ret; 
0x00001023: ret; 
0x00001145: ret; 
0x0000115f: ret; 
0x00001163: ret; 
0x000011a2: ret; 
0x000011a8: ret; 
0x000011d1: ret; 
0x000011f6: ret; 
0x0000120e: ret; 
0x0000124a: ret; 
0x0000125c: ret; 
0x0000126e: ret; 
0x000013bc: ret; 
0x000013d1: ret; 
0x000014c8: ret; 
0x000015c4: ret; 
0x000015e1: ret; 
0x00001790: ret; 
0x000017ae: ret; 
0x00001963: ret; 
0x0000197e: ret; 
0x00001c55: ret; 
0x00001c66: ret; 
0x00001c6f: ret; 
0x000011ee: rol byte ptr [ebx + 0x5d8b10c4], cl; cld; leave; ret; 
0x00001192: sal byte ptr [ebx + edx + 0x55], 0x89; in eax, 0x83; in al, dx; adc al, 0x51; call eax; 
0x0000101a: sal byte ptr [edx + eax - 1], 0xd0; add esp, 8; pop ebx; ret; 
0x000011e5: sal byte ptr [edx + ecx - 0x7d], cl; in al, dx; or byte ptr [eax + 0x51], dl; call edx; 
0x0000115d: sbb al, 0x24; ret; 
0x00001161: sbb al, 0x24; ret; 
0x00001198: sub esp, 0x14; push ecx; call eax; 
0x00001198: sub esp, 0x14; push ecx; call eax; add esp, 0x10; leave; ret; 
0x000011e8: sub esp, 8; push eax; push ecx; call edx; 
0x00001b63: test byte ptr [ecx - 0x110c], al; add eax, ecx; jmp eax; 
0x00001019: test eax, eax; je 0x101f; call eax; 
0x00001019: test eax, eax; je 0x101f; call eax; add esp, 8; pop ebx; ret; 
0x000011e4: test edx, edx; je 0x11f2; sub esp, 8; push eax; push ecx; call edx; 
0x00001960: xor al, 0x5b; pop ebp; ret; 
0x00001c52: xor al, 0x5b; pop ebp; ret; 
0x0000178a: xor al, 2; add byte ptr [eax], al; pop ebx; pop ebp; ret; 
0x00001c4e: xor eax, eax; add esp, 0x34; pop ebx; pop ebp; ret; 

204 gadgets found
